<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wy.test.persistence.mapper.HistoryLoginMapper">

	<sql id="baseColumns">
		a.id,
		a.session_id,
		a.user_id,
		a.username,
		a.display_name,
		a.message,
		a.source_ip,
		a.ip_region,
		a.ip_location,
		a.login_type,
		a.code,
		a.provider,
		a.browser,
		a.platform,
		a.application,
		a.login_url,
		a.login_time,
		a.logout_time,
		a.session_status,
		a.inst_id,
		a.create_user,
		a.create_time,
		a.update_user,
		a.update_time,
		a.deleted
	</sql>

	<sql id="where_contition">
		<if test="id != null and id != ''">
			and id = #{id}
		</if>
		<if test="userId != null and userId != ''">
			and userId = #{userId}
		</if>
		<if test="username != null and username != '' ">
			and lower(username) like lower(concat('%',#{username},'%'))
		</if>
		<if test="message != null and message != '' ">
			and lower(message) like lower(concat('%',#{message},'%'))
		</if>
		<if test="displayName != null and displayName != '' ">
			and lower(displayname) like lower(concat('%',#{displayName},'%'))
		</if>
		<if test="startDate != null and startDate != ''">
			and logintime >= #{startDate}
		</if>
		<if test="endDate != null and endDate != ''">
			and #{endDate} >= logintime
		</if>
		<if test="sessionId != null and sessionId != ''">
			and sessionid = #{sessionId}
		</if>
		<if test="loginType != null and loginType != ''">
			and logintype = #{loginType}
		</if>
		<if test="sourceIp != null and sourceIp != ''">
			and sourceip = #{sourceIp}
		</if>
	</sql>

	<select id="queryPageResults" resultType="HistoryLoginVO">
		select
		id,
		sessionid,
		userId,
		username,
		displayname,
		logintype,
		message,
		code,
		provider,
		sourceip,
		browser,
		platform,
		application,
		loginurl,
		date_format(logintime, '%Y-%m-%d %H:%i:%s') as logintime,
		date_format(logouttime, '%Y-%m-%d %H:%i:%s') as
		logouttime
		from auth_history_login
		where instid = #{instId}
		<include refid="where_contition" />
		order by logintime desc
	</select>

	<select id="queryOnlineSession" resultType="HistoryLoginVO">
		select
		sessionid id,
		sessionid,
		userId,
		username,
		displayname,
		logintype,
		message,
		code,
		provider,
		sourceip,
		browser,
		platform,
		application,
		loginurl,
		date_format(logintime, '%Y-%m-%d %H:%i:%s') as logintime,
		date_format(logouttime, '%Y-%m-%d
		%H:%i:%s') as logouttime
		from auth_history_login
		where instid = #{instId}
		and sessionstatus = 1
		<include refid="where_contition" />
		order by logintime desc
	</select>

	<update id="logout" parameterType="java.lang.String">
		update auth_history_login set
		logouttime = current_timestamp()
		where
		sessionid =
		#{value}
	</update>
</mapper>