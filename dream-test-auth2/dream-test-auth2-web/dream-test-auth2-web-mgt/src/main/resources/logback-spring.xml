<?xml version="1.0" encoding="UTF-8"?>
<!-- debug:当设置为true时,将打印出logback内部日志,实时查看logback运行状态.默认为false -->
<!-- scan:当设置为true时,配置文档如果发生改变,将会被重新加载,默认为true -->
<!-- scanPeriod:若scan为true,此属性生效,设置检测配置文档修改的时间间隔,默认时间单位是毫秒.默认的时间间隔为1分钟 -->
<configuration debug="true" scan="true" scanPeriod="60 seconds">

	<!-- 通用参数 -->
	<!--<include resource="org/springframework/boot/logging/logback/base.xml" /> -->

	<!-- 文件名必须是logback-spring.xml,如果不带spring后缀就读不到application.yml中的属性 -->
	<!-- 唯一不好的一点是无法使用默认值,如果在值不存在,将会报错 -->
	<springProperty scope="context" name="PROJECT" source="spring.application.name" />

	<property name="LOG_PATH" value="/tmp/logs/${PROJECT}" />
	<property name="CHARSET" value="UTF-8" />

	<property name="CONSOLE_PATTERN"
		value="%red(%d{yyyy-MM-dd HH:mm:ss.SSS}) %green([%thread]) %highlight(%-5level) %boldMagenta(%logger{50}:%L) - %gray(%msg%n)" />
	<property name="FILE_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}:%L - %msg%n" />

	<!-- 彩色日志 -->
	<conversionRule conversionWord="cc"
		converterClass="org.springframework.boot.logging.logback.ColorConverter" />
	<conversionRule conversionWord="wtpc"
		converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
	<conversionRule conversionWord="ewtpc"
		converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />

	<!-- 输出到控制台的日志 -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<!-- 设置日志输出格式 -->
			<pattern>${CONSOLE_PATTERN}</pattern>
			<!-- 设置日志字符集 -->
			<charset>${CHARSET}</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>
	</appender>

	<!-- level为DEBUG日志,时间滚动输出 -->
	<appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/debug.log</file>
		<encoder>
			<pattern>${FILE_PATTERN}</pattern>
			<charset>${CHARSET}</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/debug-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>15</maxHistory>
		</rollingPolicy>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>debug</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- level为INFO日志,时间滚动输出 -->
	<appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/info.log</file>
		<encoder>
			<pattern>${FILE_PATTERN}</pattern>
			<charset>${CHARSET}</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/info-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>15</maxHistory>
		</rollingPolicy>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>info</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- level为ERROR日志,时间滚动输出 -->
	<appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/error.log</file>
		<encoder>
			<pattern>${FILE_PATTERN}</pattern>
			<charset>${CHARSET}</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/error-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>15</maxHistory>
		</rollingPolicy>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 所有高于DEBUG的日志,记录到一个文件 -->
	<appender name="ALL_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/all.log</file>
		<encoder>
			<pattern>${FILE_PATTERN}</pattern>
			<charset>${CHARSET}</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/all-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>100MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<maxHistory>15</maxHistory>
		</rollingPolicy>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
			<onMatch>DENY</onMatch>
			<onMismatch>ACCEPT</onMismatch>
		</filter>
	</appender>

	<!-- 异步输出 -->
	<appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT,DEBUG,INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>256</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="INFO_FILE" />
	</appender>

	<appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>256</queueSize>
		<appender-ref ref="ERROR_FILE" />
	</appender>

	<root level="INFO">
		<appender-ref ref="CONSOLE" />
		<appender-ref ref="DEBUG_FILE" />
		<appender-ref ref="INFO_FILE" />
		<appender-ref ref="ERROR_FILE" />
		<appender-ref ref="ALL_FILE" />
	</root>

	<logger name="jdbc.sqlonly" level="DEBUG" />
	<logger name="jdbc.sqltiming" level="OFF" />
	<logger name="jdbc.resultsettable" level="OFF" />
	<logger name="jdbc.resultset" level="OFF" />
	<logger name="jdbc.connection" level="OFF" />
	<logger name="jdbc.audit" level="OFF" />
	<logger name="log4jdbc.debug" level="INFO" />

	<logger name="javax.activation" level="WARN" />
	<logger name="javax.mail" level="WARN" />
	<logger name="javax.xml.bind" level="WARN" />
	<logger name="ch.qos.logback" level="WARN" />
	<logger name="com.codahale.metrics" level="WARN" />
	<logger name="com.ryantenney" level="WARN" />
	<logger name="com.sun.xml.internal.bind" level="WARN" />
	<logger name="com.zaxxer" level="WARN" />
	<logger name="io.undertow" level="WARN" />
	<logger name="net.sf.ehcache" level="WARN" />
	<logger name="org.apache" level="WARN" />
	<logger name="org.apache.catalina.startup.DigesterFactory" level="OFF" />
	<logger name="org.bson" level="WARN" />
	<logger name="org.hibernate.validator" level="WARN" />
	<logger name="org.hibernate" level="WARN" />
	<logger name="org.hibernate.ejb.HibernatePersistence" level="OFF" />
	<logger name="org.springframework" level="WARN" />

	<logger level="OFF" name="org.hibernate.validator.internal.util.Version"></logger>
	<logger level="DEBUG" name="com.wy"></logger>
	<logger level="DEBUG" name="org.apache.mybatis.jpa"></logger>
	<logger level="INFO" name="org.springframework"></logger>
	<logger level="INFO" name="org.apache.logging"></logger>
	<logger level="ERROR" name="org.reflections.Reflections"></logger>
	<logger level="ERROR" name="RocketmqRemoting"></logger>

	<!-- 不同环境配置不同的日志级别 -->
	<!-- 开发,测试环境日志级别 -->
	<springProfile name="default,dev,test">
		<!-- 基本策略:默认日志级别 -->
		<root level="INFO">
			<appender-ref ref="CONSOLE" />
			<appender-ref ref="DEBUG_FILE" />
			<appender-ref ref="INFO_FILE" />
			<appender-ref ref="ERROR_FILE" />
			<appender-ref ref="ALL_FILE" />
		</root>
		<!-- 定制化日志级别 -->
		<logger name="com.dream" level="DEBUG" />
		<logger name="mapper" level="DEBUG" />
		<logger name="org.springframework" level="INFO" />
	</springProfile>

	<!-- 生产环境日志级别 -->
	<springProfile name="prod">
		<root level="DEBUG">
			<appender-ref ref="CONSOLE" />
			<appender-ref ref="DEBUG_FILE" />
			<appender-ref ref="INFO_FILE" />
			<appender-ref ref="ERROR_FILE" />
			<appender-ref ref="ALL_FILE" />
		</root>
		<logger name="com.dream" level="DEBUG" />
		<logger name="mapper" level="DEBUG" />
		<logger name="org.springframework" level="INFO" />
	</springProfile>
</configuration>